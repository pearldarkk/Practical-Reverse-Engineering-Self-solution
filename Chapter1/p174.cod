; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30137.0 

	TITLE	C:\Users\ngahn\source\repos\masm\Debug\p174.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_data:BYTE:0cH
_DATA	ENDS
msvcjmc	SEGMENT
__A2143F22_corecrt_stdio_config@h DB 01H
__829E1958_corecrt_wstdio@h DB 01H
__6DFAE8B8_stdio@h DB 01H
__D22F03B6_p174@c DB 01H
msvcjmc	ENDS
PUBLIC	_func
PUBLIC	_main
PUBLIC	__JustMyCode_Default
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\ngahn\source\repos\Practical Reverse Engineering Self-solution\Chapter1\p174.c
;	COMDAT _main
_TEXT	SEGMENT
$T1 = -228						; size = 12
_dat$ = -16						; size = 12
_main	PROC						; COMDAT

; 16   : int main() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000f	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	f3 ab		 rep stosd
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __D22F03B6_p174@c
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 17   :     struct data dat;
; 18   :     dat.x = 2;

  00025	c7 45 f0 02 00
	00 00		 mov	 DWORD PTR _dat$[ebp], 2

; 19   :     func(dat);

  0002c	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0002f	8b c4		 mov	 eax, esp
  00031	8b 4d f0	 mov	 ecx, DWORD PTR _dat$[ebp]
  00034	89 08		 mov	 DWORD PTR [eax], ecx
  00036	8b 55 f4	 mov	 edx, DWORD PTR _dat$[ebp+4]
  00039	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _dat$[ebp+8]
  0003f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00042	8d 95 1c ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00048	52		 push	 edx
  00049	e8 00 00 00 00	 call	 _func
  0004e	83 c4 10	 add	 esp, 16			; 00000010H

; 20   : 
; 21   :     return 0;

  00051	33 c0		 xor	 eax, eax

; 22   : }

  00053	52		 push	 edx
  00054	8b cd		 mov	 ecx, ebp
  00056	50		 push	 eax
  00057	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@main
  0005d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00062	58		 pop	 eax
  00063	5a		 pop	 edx
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
$LN5@main:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@main
$LN4@main:
  00080	f0 ff ff ff	 DD	 -16			; fffffff0H
  00084	0c 00 00 00	 DD	 12			; 0000000cH
  00088	00 00 00 00	 DD	 $LN3@main
$LN3@main:
  0008c	64		 DB	 100			; 00000064H
  0008d	61		 DB	 97			; 00000061H
  0008e	74		 DB	 116			; 00000074H
  0008f	00		 DB	 0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\ngahn\source\repos\Practical Reverse Engineering Self-solution\Chapter1\p174.c
;	COMDAT _func
_TEXT	SEGMENT
$T1 = 8							; size = 4
_obj$ = 12						; size = 12
_func	PROC						; COMDAT

; 10   : struct data func(struct data obj) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b fd		 mov	 edi, ebp
  0000e	33 c9		 xor	 ecx, ecx
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __D22F03B6_p174@c
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 11   :     ++obj.x;

  00021	8b 45 0c	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	83 c0 01	 add	 eax, 1
  00027	89 45 0c	 mov	 DWORD PTR _obj$[ebp], eax

; 12   :     obj.y = 5;

  0002a	c7 45 10 05 00
	00 00		 mov	 DWORD PTR _obj$[ebp+4], 5

; 13   :     return obj;

  00031	8b 45 08	 mov	 eax, DWORD PTR $T1[ebp]
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR _obj$[ebp]
  00037	89 08		 mov	 DWORD PTR [eax], ecx
  00039	8b 55 10	 mov	 edx, DWORD PTR _obj$[ebp+4]
  0003c	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0003f	8b 4d 14	 mov	 ecx, DWORD PTR _obj$[ebp+8]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00045	8b 45 08	 mov	 eax, DWORD PTR $T1[ebp]

; 14   : }

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
_func	ENDP
_TEXT	ENDS
END
